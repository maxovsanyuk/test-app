{"version":3,"sources":["../../my-app/src/Components/App/Header/Header.js","../../my-app/src/Components/App/Pagination/Pagination.js","../../my-app/src/Components/App/Pagination/ScrollBtn/ScrollBtn.js","../../my-app/src/Components/App/Footer/Footer.js","../../my-app/src/Components/App/VideoItems/VideoItems.js","../../my-app/src/Components/App/App.js","../../my-app/src/Components/serviceWorker.js","../../my-app/src/index.js"],"names":["Header","props","react_default","a","createElement","react","className","id","href","onClick","data","getTopRated","getTopLiked","getTopTrending","document","location","reload","Pagination","getPage","_ref","target","pageNumber","getAttribute","querySelectorAll","forEach","item","classList","add","remove","GET_DAT","concat","fetch","then","response","json","_this","state","paginationItemsData","_this2","this","getInitPage","initPage","map","index","key","data-page-number","previousPage","nextPage","Component","ScrollButton","getElementById","scrollBy","top","behavior","Footer","ScrollBtn_ScrollBtn","VideoItems","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createVideoBlock","dataReliseKey","results","length","setState","movieKey","dataRelise","console","log","getSimilarVideo","_ref2","renderSimilarVideo","opts","playerVars","autoplay","filmItems","data-key","data-relise","release_date","event","getElementsByClassName","toggle","currentTarget","title","overview","vote_count","vote_average","original_language","alt","src","poster_path","closeIfrane","bind","YouTube","videoId","App_Pagination_Pagination","App_Footer_Footer","createFirstPage","App","initialPage","isLoaded","isFirstPage","GET_DATA","sort","b","App_Header_Header","App_VideoItems_VideoItems","Boolean","window","hostname","match","ReactDOM","render","Components_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wXAsBeA,MAlBf,SAAgBC,GACZ,OACIC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACIH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,SAASC,GAAG,UAC1BL,EAAAC,EAAAC,cAAA,WAASE,UAAU,kBACfJ,EAAAC,EAAAC,cAAA,KAAGI,KAAK,gCAAgCF,UAAU,eAAlD,KACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACXJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,2BAA2BG,QAASR,EAAMS,KAAKC,aAAjE,aACAT,EAAAC,EAAAC,cAAA,UAAQE,UAAU,2BAA2BG,QAASR,EAAMS,KAAKE,aAAjE,aACAV,EAAAC,EAAAC,cAAA,UAAQE,UAAU,8BAA8BG,QAASR,EAAMS,KAAKG,gBAApE,0BACAX,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcG,QAAS,WAAOK,SAASC,SAASC,QAAO,KAAzE,yBCsCTC,oNA/CXC,QAAU,SAAAC,GAAc,IAAZC,EAAYD,EAAZC,OACFC,EAAaD,EAAOE,aAAa,oBACdR,SAASS,iBAAiB,2BAClCC,QAAQ,SAACC,GACtBA,EAAKC,UAAUC,IAAI,gBAEvBP,EAAOM,UAAUE,OAAO,cACxBR,EAAOM,UAAUC,IAAI,UACrB,IAAME,EAAO,0KAAAC,OAA6KT,GAC1LU,MAAMF,GACLG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtB,GACFyB,EAAKlC,MAAMmC,MAAMC,oBAAoB3B,8EAIrC,IAAA4B,EAAAC,KAEAC,EAAcD,KAAKtC,MAAMmC,MAAMK,SAASC,IAAI,SAACjB,EAAMkB,GACnD,OAAa,IAAVA,EAECzC,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAUuC,IAAKD,GACXzC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gCAAgCC,GAAIoC,EAAOlC,QAAS6B,EAAKpB,QAAS2B,mBAAkBpB,GAAOA,IAKjHvB,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAUuC,IAAKD,GACXzC,EAAAC,EAAAC,cAAA,UAAQG,GAAIoC,EAAOrC,UAAU,oCAAoCG,QAAS6B,EAAKpB,QAAS2B,mBAAkBpB,GAAOA,MAK7H,OACIvB,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACIH,EAAAC,EAAAC,cAAA,WAASE,UAAU,cACfJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAAeG,QAAS8B,KAAKtC,MAAMmC,MAAMU,cAA3D,YACA5C,EAAAC,EAAAC,cAAA,WACKoC,GAELtC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,WAAWG,QAAS8B,KAAKtC,MAAMmC,MAAMW,UAAvD,iBA1CKC,0BCYVC,MAXf,WAII,OACI/C,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACIH,EAAAC,EAAAC,cAAA,UAAQK,QAAU,WAJtBK,SAASoC,eAAe,gBAAgBC,SAAS,CAAEC,KAAM,IAAOC,SAAU,YAI7B/C,UAAU,gBCMhDgD,MAZf,WACI,OACIpD,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACIH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UACVJ,EAAAC,EAAAC,cAAA,KAAGI,KAAK,0DAA0DF,UAAU,YAA5E,KACAJ,EAAAC,EAAAC,cAAA,KAAGI,KAAK,iCAAiCF,UAAU,UAAnD,KACAJ,EAAAC,EAAAC,cAACmD,EAAD,SC0FLC,cA5FX,SAAAA,EAAYvD,GAAM,IAAAkC,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAlB,KAAAiB,IACdrB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAlB,KAAAkB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAtB,KAAMtC,KAmBV6D,iBAAmB,SAAA3C,GAAc,IAAZC,EAAYD,EAAZC,OACXwB,EAAMxB,EAAOE,aAAa,YAC1ByC,EAAgB3C,EAAOE,aAAa,eAC1CS,MAAK,sCAAAD,OAAuCc,EAAvC,mEACJZ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtB,GACCA,EAAKsD,QAAQC,QACZ9B,EAAK+B,SAAS,CACVC,SAAUzD,EAAKsD,QAAQ,GAAGpB,IAC1BwB,WAAYL,IAGpBM,QAAQC,IAAInC,EAAKC,MAAMgC,YACvBtD,SAASoC,eAAe,kBAAkBxB,UAAUC,IAAI,WAjC9CQ,EAqClBoC,gBAAkB,SAAAC,GAAc,IACtB5B,EADsB4B,EAAZpD,OACGE,aAAa,YAChCS,MAAK,sCAAAD,OAAuCc,EAAvC,qEACJZ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtB,GACFyB,EAAKlC,MAAMmC,MAAMqC,mBAAmB/D,MAxCxCyB,EAAKC,MAAQ,CACT+B,SAAU,GACVC,WAAY,GACZM,KAAM,CACFC,WAAY,CACVC,SAAU,KAPNzC,6EAcdI,KAAK2B,SAAS,CACVC,SAAU,KAEdrD,SAASoC,eAAe,kBAAkBxB,UAAUE,OAAO,yCA6BvD,IAAAU,EAAAC,KACAsC,EAAYtC,KAAKtC,MAAMS,KAAKgC,IAAI,SAACjB,EAAMkB,GAAP,OAChCzC,EAAAC,EAAAC,cAAA,OAAKG,GAAG,eAAeD,UAAU,eAAesC,IAAKnB,EAAKlB,IACtDL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACfJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,kBAAkBwE,WAAUrD,EAAKlB,GAAKE,QAAS6B,EAAKiC,iBAAtE,0BACIrE,EAAAC,EAAAC,cAAA,UAAQE,UAAU,WAAWwE,WAAUrD,EAAKlB,GAAIwE,cAAatD,EAAKuD,aAAcvE,QAAS6B,EAAKwB,mBAC9F5D,EAAAC,EAAAC,cAAA,UAAQK,QAAU,SAACwE,GACOnE,SAASoE,uBAAuB,oBAAoBvC,GAC1DjB,UAAUyD,OAAO,wBACjCF,EAAMG,cAAc1D,UAAUyD,OAAO,uBACtC7E,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAcmB,EAAK4D,OACjCnF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBmB,EAAK6D,YAG7CpF,EAAAC,EAAAC,cAAA,QAAME,UAAU,kBAAkBmB,EAAK8D,YACvCrF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAamB,EAAK+D,cAClCtF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAamB,EAAKgE,mBAClCvF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcoF,IAAKjE,EAAK6D,SAAUK,IAAG,mCAAA7D,OAAqCL,EAAKmE,kBAKtG,OACI1F,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACIH,EAAAC,EAAAC,cAAA,QAAME,UAAU,eAAeC,GAAG,gBAC9BL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAAoBC,GAAG,kBACtCL,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,iBAA8CiC,KAAKH,MAAMgC,YACrDlE,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcG,QAAS8B,KAAKsD,YAAYC,KAAKvD,QAC/DrC,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACIC,QAASzD,KAAKH,MAAM+B,SACpBO,KAAMnC,KAAKH,MAAMsC,KACjBpE,UAAU,oBAElBJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,oBACduE,EACD3E,EAAAC,EAAAC,cAAC6F,EAAD,CAAY7D,MAAOG,KAAKtC,MAAMmC,QAC9BlC,EAAAC,EAAAC,cAAC8F,EAAD,gBArFClD,aCAzB,SAASmD,IACkBrF,SAASS,iBAAiB,2BAClCC,QAAQ,SAACC,EAAMkB,GAC9BlB,EAAKC,UAAUE,OAAO,UACT,IAAVe,IACDlB,EAAKC,UAAUE,OAAO,cACtBH,EAAKC,UAAUC,IAAI,iBAoHVyE,cA7Gb,SAAAA,EAAYnG,GAAO,IAAAkC,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAlB,KAAA6D,IACjBjE,EAAAsB,OAAAE,EAAA,EAAAF,CAAAlB,KAAAkB,OAAAG,EAAA,EAAAH,CAAA2C,GAAAvC,KAAAtB,KAAMtC,KACDmC,MAAQ,CACX1B,KAAO,GACP2F,YAAa,EACb5D,SAAU,CAAC,EAAE,EAAE,EAAE,EAAE,GACnB6D,UAAU,EACVC,aAAa,EACbxD,SAAU,WACNZ,EAAK+B,SAAS,CACZmC,YAAalE,EAAKC,MAAMiE,aAAe,IAE3CF,IACA,IAAMK,EAAQ,0KAAA1E,OAA6KK,EAAKC,MAAMiE,aACtMtE,MAAMyE,GACLxE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtB,GACJyB,EAAK+B,SAAS,CACZxD,KAAMA,EAAKsD,QACXuC,aAAa,EACb9D,SAAUN,EAAKC,MAAMK,SAASC,IAAI,SAAAjB,GAAI,OACpCA,EAAM,SAKdqB,aAAc,WACZ,IAAGX,EAAKC,MAAMmE,YAAd,EAC2B,IAA3BpE,EAAKC,MAAMmE,aAAyBpE,EAAKC,MAAMiE,YAAc,EAAIlE,EAAK+B,SAAS,CAAEmC,YAAalE,EAAKC,MAAMiE,aAAe,EAAGE,aAAa,IAAWpE,EAAK+B,SAAS,CAAEqC,aAAa,IAChLJ,IACA,IAAMK,EAAQ,0KAAA1E,OAA6KK,EAAKC,MAAMiE,aACtMtE,MAAMyE,GACLxE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtB,GACJyB,EAAK+B,SAAS,CACZxD,KAAMA,EAAKsD,QACXvB,UAAqC,IAA3BN,EAAKC,MAAMmE,YAAuBpE,EAAKC,MAAMK,SAAWN,EAAKC,MAAMK,SAASC,IAAI,SAAAjB,GAAI,OAC5FA,EAAM,UAKdY,oBAAqB,SAAC3B,GACpByB,EAAK+B,SAAS,CACZxD,KAAMA,EAAKsD,WAGfS,mBAAoB,SAAC/D,GACnByB,EAAK+B,SAAS,CACZxD,KAAMA,EAAKsD,UAEblD,SAASoC,eAAe,gBAAgBC,SAAS,CAAEC,KAAM,IAAOC,SAAU,WACjDvC,SAASS,iBAAiB,2BAClCC,QAAQ,SAACC,GACxBA,EAAKC,UAAUC,IAAI,iBAGvBhB,YAAa,WACXwB,EAAK+B,SAAS,CACZxD,KAAMyB,EAAKC,MAAM1B,KAAK+F,KAAK,SAACtG,EAAGuG,GAC7B,OAAOA,EAAElB,aAAerF,EAAEqF,kBAGhC5E,YAAa,WACXuB,EAAK+B,SAAS,CACZxD,KAAMyB,EAAKC,MAAM1B,KAAK+F,KAAK,SAACtG,EAAGuG,GAC7B,OAAOA,EAAEnB,WAAapF,EAAEoF,gBAG9B1E,eAAgB,WAEdkB,MADqB,0FAEpBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtB,GACJyB,EAAK+B,SAAS,CACZxD,KAAMA,EAAKsD,cA3EF7B,mFAkFC,IAAAG,EAAAC,KACZiE,EAAQ,0KAAA1E,OAA6KS,KAAKH,MAAMiE,aACtMtE,MAAMyE,GACLxE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtB,GACJ4B,EAAK4B,SAAS,CACZxD,KAAMA,EAAKsD,QACXsC,UAAU,uCAMd,OACEpG,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAACuG,EAAD,CAAQjG,KAAM6B,KAAKH,QAEjBG,KAAKH,MAAMkE,SACXpG,EAAAC,EAAAC,cAACwG,EAAD,CAAYlG,KAAM6B,KAAKH,MAAM1B,KAAM0B,MAAOG,KAAKH,QAE/ClC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBAvGP0C,aCPE6D,QACW,cAA7BC,OAAO/F,SAASgG,UAEe,UAA7BD,OAAO/F,SAASgG,UAEhBD,OAAO/F,SAASgG,SAASC,MACvB,2DCZNC,IAASC,OAAOhH,EAAAC,EAAAC,cAAC+G,EAAD,MAASrG,SAASoC,eAAe,SD2H3C,kBAAmBkE,WACrBA,UAAUC,cAAcC,MAAMtF,KAAK,SAAAuF,GACjCA,EAAaC","file":"static/js/main.09559e42.chunk.js","sourcesContent":["\nimport React, { Fragment } from 'react';\nimport '../Header/Header.css';\n\nfunction Header(props){\n    return (\n        <Fragment>\n            <header className=\"header\" id=\"header\">\n                <section className=\"header-section\">\n                    <a href=\"../../../../public/index.html\" className=\"header-logo\"> </a>\n                    <div className=\"header-btn-container\">\n                        <button className=\"top-rated-btn header-btn\" onClick={props.data.getTopRated}>Top Rated</button>\n                        <button className=\"top-liked-btn header-btn\" onClick={props.data.getTopLiked}>Top Liked</button>\n                        <button className=\"top-trending-btn header-btn\" onClick={props.data.getTopTrending}>Top 20 trending movies</button>\n                        <button className=\"refresh-btn\" onClick={() => {document.location.reload(true)}}> </button>\n                    </div>\n                </section>\n            </header>\n        </Fragment>\n    );\n}\n\nexport default Header;","import React, { Component, Fragment } from 'react';\nimport './Pagination.css';\n\nclass Pagination extends Component {\n\n    getPage = ({target}) => {\n        const pageNumber = target.getAttribute('data-page-number');\n        const allPaginationBtn = document.querySelectorAll('.pagination_counter_btn');\n        allPaginationBtn.forEach((item) => {\n            item.classList.add('dis-active');\n        });\n        target.classList.remove('dis-active');\n        target.classList.add('active');\n        const GET_DAT = `https://api.themoviedb.org/3/discover/movie?api_key=5874acfd11651a28c55771624f7021f4&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=true&page=${pageNumber}`\n        fetch(GET_DAT)\n        .then(response => response.json())\n        .then(data => {\n            this.props.state.paginationItemsData(data);\n        })\n    }\n\n    render(){\n\n        let getInitPage = this.props.state.initPage.map((item, index) => {\n            if(index === 0){\n                return(\n                <Fragment key={index}>\n                    <button className=\"active pagination_counter_btn\" id={index} onClick={this.getPage} data-page-number={item}>{item}</button>\n                </Fragment>\n                )\n              }\n              return(\n                <Fragment key={index}>\n                    <button id={index} className=\"dis-active pagination_counter_btn\" onClick={this.getPage} data-page-number={item}>{item}</button>\n                </Fragment>\n              )\n        });\n\n        return(\n            <Fragment>\n                <section className=\"pagination\">\n                    <button className=\"previous-btn\" onClick={this.props.state.previousPage}>Previous</button>\n                    <div>\n                        {getInitPage}\n                    </div>\n                    <button className=\"next-btn\" onClick={this.props.state.nextPage}>Next</button>\n                </section>\n            </Fragment>\n        )\n    }\n}\n\nexport default Pagination;\n\n","import React, { Fragment } from 'react';\nimport './ScrollBtn.css';\n\n\nfunction ScrollButton(){\n    function scrollToTop() {\n        document.getElementById('main-section').scrollBy({ top: -10000, behavior: 'smooth' });\n    }\n    return (\n        <Fragment>\n            <button onClick={ () => {scrollToTop()}} className=\"scrollBtn\"></button>\n        </Fragment>\n    );\n}\n\nexport default ScrollButton;","import React, { Fragment } from 'react';\nimport './Footer.css';\nimport ScrollButton from '../Pagination/ScrollBtn/ScrollBtn';\n\nfunction Footer(){\n    return (\n        <Fragment>\n            <footer className=\"footer\">\n                    <a href=\"https://www.linkedin.com/in/maksym-ovsianiuk-252372174/\" className=\"linkedin\"> </a>\n                    <a href=\"https://github.com/maxovsanyuk\" className=\"github\"> </a>\n                    <ScrollButton />\n            </footer>\n        </Fragment>\n    );\n}\n\nexport default Footer;","import React, { Component, Fragment } from 'react';\nimport './VideoItems.css';\nimport YouTube from 'react-youtube';\nimport Pagination from '../Pagination/Pagination';\nimport Footer from '../Footer/Footer';\n\n\nclass VideoItems extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            movieKey: '',\n            dataRelise: '',\n            opts: {\n                playerVars: {\n                  autoplay: 1\n                }\n            },\n        }\n    }\n\n    closeIfrane(){\n        this.setState({\n            movieKey: ''\n        })\n        document.getElementById('youtube-iframe').classList.remove('flex');\n    }\n\n    createVideoBlock = ({target}) => {\n        const key = target.getAttribute('data-key');\n        const dataReliseKey = target.getAttribute('data-relise');\n        fetch(`https://api.themoviedb.org/3/movie/${key}/videos?api_key=5874acfd11651a28c55771624f7021f4&language=en-U`)\n        .then(response => response.json())\n        .then(data => {\n            if(data.results.length){\n                this.setState({\n                    movieKey: data.results[0].key,\n                    dataRelise: dataReliseKey,\n                  })\n            }\n            console.log(this.state.dataRelise);\n            document.getElementById('youtube-iframe').classList.add('flex');\n        })\n    }\n\n    getSimilarVideo = ({target}) => {\n        const key = target.getAttribute('data-key');\n        fetch(`https://api.themoviedb.org/3/movie/${key}/similar?api_key=5874acfd11651a28c55771624f7021f4&language=en-US`)\n        .then(response => response.json())\n        .then(data => {\n            this.props.state.renderSimilarVideo(data);\n        })\n    }\n\n    render(){\n        let filmItems = this.props.data.map((item, index) =>\n            <div id=\"main-section\" className=\"item-section\" key={item.id}>\n                <div className=\"player-placeholder\">\n                <button className=\"get-similar-btn\" data-key={item.id}  onClick={this.getSimilarVideo}>Show 20 similar movies</button>\n                    <button className=\"play-btn\" data-key={item.id} data-relise={item.release_date} onClick={this.createVideoBlock}></button>\n                    <button onClick={ (event) => {\n                        let overviewContent = document.getElementsByClassName('overview-content')[index];\n                        overviewContent.classList.toggle('overview-content-act');\n                        event.currentTarget.classList.toggle('overview-btn-close');\n                    }} className=\"overview-btn\"></button>\n                    <div className=\"overview-content\">\n                        <h1 className=\"film-title\">{item.title}</h1>\n                        <div className=\"item-overview\">{item.overview}</div>\n                    </div>\n                </div>\n                <span className=\"people-counter\">{item.vote_count}</span>\n                <span className=\"imdb-rate\">{item.vote_average}</span>\n                <span className=\"item-lang\">{item.original_language}</span>\n                <img className=\"film-poster\" alt={item.overview} src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`}></img>\n            </div>\n\n        );\n\n        return(\n            <Fragment>\n                <main className=\"main-section\" id=\"main-section\">\n                    <div className=\"youtube-container\" id=\"youtube-iframe\">\n                    <span className=\"release-date\">Release date: {this.state.dataRelise}</span>\n                        <button className=\"close-ifrem\" onClick={this.closeIfrane.bind(this)}></button>\n                        <YouTube\n                            videoId={this.state.movieKey}\n                            opts={this.state.opts}\n                            className=\"youtube-iframe\"/>\n                    </div>\n                    <section className=\"movies-container\">\n                        {filmItems}\n                        <Pagination state={this.props.state} />\n                        <Footer />\n                    </section>\n                </main>\n            </Fragment>\n        )\n    }\n}\n\nexport default VideoItems;","import React, { Component, Fragment } from 'react';\nimport 'normalize.css';\nimport './App.css';\nimport Header from '../App/Header/Header';\nimport VideoItems from './VideoItems/VideoItems';\n\n\nfunction createFirstPage(){\n  const allPaginationBtn = document.querySelectorAll('.pagination_counter_btn');\n  allPaginationBtn.forEach((item, index) => {\n    item.classList.remove('active');\n    if(index === 0){\n      item.classList.remove('dis-active');\n      item.classList.add('active');\n    }\n  });\n}\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data : [],\n      initialPage: 1,\n      initPage: [1,2,3,4,5],\n      isLoaded: false,\n      isFirstPage: true,\n      nextPage: () => {\n          this.setState({\n            initialPage: this.state.initialPage += 5,\n        })\n        createFirstPage();\n        const GET_DATA = `https://api.themoviedb.org/3/discover/movie?api_key=5874acfd11651a28c55771624f7021f4&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=true&page=${this.state.initialPage}`\n        fetch(GET_DATA)\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            data: data.results,\n            isFirstPage: false,\n            initPage: this.state.initPage.map(item =>\n              item +5\n            )\n          })\n        })\n      },\n      previousPage: () => {\n        if(this.state.isFirstPage){return}\n        this.state.isFirstPage === false && this.state.initialPage > 5 ? this.setState({ initialPage: this.state.initialPage -= 5, isFirstPage: false }) : this.setState({ isFirstPage: true });\n        createFirstPage();\n        const GET_DATA = `https://api.themoviedb.org/3/discover/movie?api_key=5874acfd11651a28c55771624f7021f4&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=true&page=${this.state.initialPage}`\n        fetch(GET_DATA)\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            data: data.results,\n            initPage: this.state.isFirstPage === true ? this.state.initPage : this.state.initPage.map(item =>\n              item -5\n            )\n          })\n        })\n      },\n      paginationItemsData: (data) => {\n        this.setState({\n          data: data.results,\n        })\n      },\n      renderSimilarVideo: (data) => {\n        this.setState({\n          data: data.results\n        })\n        document.getElementById('main-section').scrollBy({ top: -10000, behavior: 'smooth' });\n        const allPaginationBtn = document.querySelectorAll('.pagination_counter_btn');\n        allPaginationBtn.forEach((item) => {\n          item.classList.add('dis-active');\n        });\n      },\n      getTopRated: () => {\n        this.setState({\n          data: this.state.data.sort((a, b) =>{\n            return b.vote_average - a.vote_average})\n        })\n      },\n      getTopLiked: () => {\n        this.setState({\n          data: this.state.data.sort((a, b) =>{\n            return b.vote_count - a.vote_count})\n        })\n      },\n      getTopTrending: () => {\n        const GET_TOP_POPULAR = `https://api.themoviedb.org/3/trending/all/day?api_key=5874acfd11651a28c55771624f7021f4`\n        fetch(GET_TOP_POPULAR)\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            data: data.results,\n          })\n        })\n      }\n    }\n  }\n\n  componentDidMount() {\n    const GET_DATA = `https://api.themoviedb.org/3/discover/movie?api_key=5874acfd11651a28c55771624f7021f4&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=true&page=${this.state.initialPage}`\n    fetch(GET_DATA)\n    .then(response => response.json())\n    .then(data => {\n      this.setState({\n        data: data.results,\n        isLoaded: true,\n      })\n    })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Header data={this.state} />\n\n        { this.state.isLoaded ? (\n          <VideoItems data={this.state.data} state={this.state} />\n        ) : (\n          <div className=\"preloader\"></div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './Components/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n"],"sourceRoot":""}